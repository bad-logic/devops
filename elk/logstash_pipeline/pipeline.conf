input {
  file {
    type => "log"
    path => "/var/logs/spring/app.log"
    id => "log_input"
  }
  beats {
    port => 5044
    id => "beats_input"
  }
}

# filter {
#   if [type] == "log" {
    # Uncomment and modify the filter as needed
    # if [message] =~ "\tat" {
    #   grok {
    #     match => ["message", "^(\tat)"]
    #     add_tag => ["stacktrace"]
    #   }
    # }
  # }
# }

filter {
  grok {
    match => { 
      "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} \[%{DATA:thread_name}\] %{JAVACLASS:class} - %{GREEDYDATA:log_message}"
    }
  }
  
  if [log_message] =~ "Sales data" {
    grok {
      match => { "log_message" => "Sales data - product: %{DATA:product}, category: %{DATA:category}, quantity: %{NUMBER:quantity}, price: %{NUMBER:price}" }
    }
  }
  mutate {
    convert => { "quantity" => "integer" }
    convert => { "price" => "float" }
  }

  date {
    match => [ "timestamp", "ISO8601" ]
  }
}


output {
  if [type] == "log" {
    stdout {
      codec => rubydebug
    }
    elasticsearch {
      index => "logs-%{+YYYY.MM.dd}"
      hosts => ["https://es01:9200"]
      user => "elastic"
      password => "elastic@123"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [@metadata][beat] {
    stdout {
      codec => rubydebug
    }
    elasticsearch {
      index => "metrics-%{+YYYY.MM.dd}"
      hosts => ["https://es01:9200"]
      user => "elastic"
      password => "elastic@123"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  }
}